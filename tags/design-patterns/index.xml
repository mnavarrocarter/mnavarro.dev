<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design Patterns on</title><link>https://mnavarro.dev/tags/design-patterns/</link><description>Recent content in Design Patterns on</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><lastBuildDate>Sun, 26 Sep 2021 20:00:00 +0100</lastBuildDate><atom:link href="https://mnavarro.dev/tags/design-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>The Golden Rule for Writing Code</title><link>https://mnavarro.dev/posts/golden-rule-code/</link><pubDate>Sun, 26 Sep 2021 20:00:00 +0100</pubDate><guid>https://mnavarro.dev/posts/golden-rule-code/</guid><description>Every now and then I read a piece about DRY vs WET, explaining their benefits over its counterpart. Most of the time, these pieces are quite unhelpful, as they are way too vague and general. They lack a crucial thing, and that is context.
I believe this is the most common aspect on disagreements about any topic in software development. Someone writes a piece about X or Y topic arguing a point, but then another piece comes up arguing a different case (or sometimes totally the opposite one).</description></item></channel></rss>